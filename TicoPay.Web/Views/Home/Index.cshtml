@using Abp.Web.Mvc.Extensions
@model TicoPay.ReportClosing.Dto.DashboardDto
@{
    /**/

    ViewBag.ActiveMenu = "Inicio"; //The menu item will be active for this page.
    ViewBag.Title = "Inicio";

}
@section Scripts
{
    @Html.IncludeScript("~/Scripts/tutorial/turorial.js")


}
<style>
    .font-title {
        font-size: 12px;
    }
</style>
@*<script src="@Url.Content("~/Scripts/tutorial/turorial.js")" type="text/javascript"></script>*@
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-12" style="text-align: center">
        <h2><b>Bienvenido</b> a TicoPay</h2>
    </div>
</div>
<br />
@if (Model != null && Model.IsTutorialCompania && Model.IsTutorialClients && (Model.IsTutotialServices || Model.IsTutorialProduct))
{
    if (IsGranted("Dashboard"))
    {
        <div class="wrapper wrapper-content animated fadeInRight ">

            <div class="row" style="padding-left:15px">
                <div class="col-lg-3">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.Label("Moneda:", new { @class = "control-label col-lg-4" })
                            <div class="col-md-8">
                                @Html.CheckBoxFor(m => m.IsUSDOfCRC, new { @id = "toggle-two", @type = "checkbox" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.Label("Sucursales:", new { @class = "control-label col-lg-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.BranchOfficeId, new SelectList(Model.BranchOffice.ToArray(), "Id", "Name"), "Todas",

                                             new
                                             {
                                                 @class = "form-control",
                                                 data_cascade_combo = "#Drawer_DD",
                                                 data_cascade_combo_source = Url.Action("GetDrawer", "Drawers"),
                                                 data_cascade_combo_param_name = "id",
                                                 @required = "required",
                                                 @title = "Seleccione una Sucursal",
                                                    //  onchange = "getCajas();",
                                                    @Id = "Branch_DD"
                                             }
                                         )
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.Label("Cajas:", new { @class = "control-label col-lg-3" })
                            <div class="col-md-8">

                                @Html.DropDownListFor(model => model.DrawerId, Model.DrawerUser, "Todas",
                                             new
                                             {

                                                 @class = "form-control",
                                                 @required = "required",
                                                 @title = "Seleccione una Caja",
                                                 @id = "Drawer_DD"

                                             })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @{string currencyFmt = @System.Configuration.ConfigurationManager.AppSettings["CurrencyFormat"];}
            <div class="wrapper wrapper-content">
                <div class="row">
                    <div class="col-lg-3">
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <span class="label label-success pull-right">Mensual</span>
                                <h5>Facturado</h5>
                            </div>
                            @{
                                decimal? totalinvoices = @Model.InvoicesList.Where(a => a.Month == DateTime.Now.Month.ToString()).Sum(a => a.Total);
                                decimal? totalpayments = @Model.PaymentList.Where(a => a.Month == DateTime.Now.Month.ToString()).Sum(a => a.Total);
                                decimal? totalnoteCredit = @Model.NoteCreditList.Where(a => a.Month == DateTime.Now.Month.ToString()).Sum(a => a.Total);
                                decimal? totalnoteDebit = @Model.NoteDebitList.Where(a => a.Month == DateTime.Now.Month.ToString()).Sum(a => a.Total);
                            }

                            <script>
                        $(document).ready(function () {
                        var max = Math.max('@totalinvoices', '@totalpayments','@totalnoteCredit','@totalnoteDebit').toFixed(2);
                            if (max.toString().length > 9 && max.toString().length <= 14) {
                                $(".no-margins").css('font-size', '24px');
                            }
                            if (max.toString().length > 14 && max.toString().length < 17) {
                                $(".no-margins").css('font-size', '20px');
                            }
                            if (max.toString().length >= 17) {
                                $(".no-margins").css('font-size', '18px');
                            }
                        });
                            </script>
                            <div class="ibox-content">
                                <h1 class="no-margins" id="Prueba">@Html.FormatValue(totalinvoices, currencyFmt)</h1>
                                <h2 class="no-margins"><strong>@Model.Moneda</strong></h2>
                                <br />
                                <small>Total Facturado</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <span class="label label-info pull-right">Mensual</span>
                                <h5>Pagado</h5>
                            </div>
                            <div class="ibox-content">
                                <h1 class="no-margins">@Html.FormatValue(@totalpayments, currencyFmt)</h1>
                                <h2 class="no-margins"><strong>@Model.Moneda</strong></h2>
                                <br />
                                <small>Total Pagado</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <span class="label label-primary pull-right">Mensual</span>
                                <h5>Notas de Crédito</h5>
                            </div>
                            <div class="ibox-content">
                                <h1 class="no-margins">@Html.FormatValue(@totalnoteCredit, currencyFmt)</h1>
                                <h2 class="no-margins"><strong>@Model.Moneda</strong></h2>
                                <br />
                                <small>Total Clientes</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <span class="label label-danger pull-right">Mensual</span>
                                <h5>Notas Débito</h5>
                            </div>
                            <div class="ibox-content">
                                <h1 class="no-margins">@Html.FormatValue(@totalnoteDebit, currencyFmt)</h1>
                                <h2 class="no-margins"><strong>@Model.Moneda</strong></h2>
                                <br />
                                <small>Total Usuarios</small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <h5>Facturas</h5>
                                <div class="pull-right">
                                    @*<div class="btn-group">
                                            <button type="button" class="btn btn-xs btn-white active">Today</button>
                                            <button type="button" class="btn btn-xs btn-white">Monthly</button>
                                            <button type="button" class="btn btn-xs btn-white">Annual</button>
                                        </div>*@
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="row">
                                    <div class="col-lg-9">
                                        <div class="flot-chart">
                                            <div class="flot-chart-content" id="flot-dashboard-chart" style="padding: 0px; position: relative;">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3">
                                        @{
                                            int lastmonth = DateTime.Now.Month - 1;
                                            decimal? totalinvoicesyear = @Model.InvoicesList.Sum(a => a.Total);
                                            decimal? totalinvoicelastmonth = @Model.InvoicesList.Where(a => a.Month == lastmonth.ToString()).Sum(a => a.Total);
                                            decimal? totalinvoicemonth = @Model.InvoicesList.Where(a => a.Month == DateTime.Now.Month.ToString()).Sum(a => a.Total);
                                        }
                                        <ul class="stat-list">
                                            <li>
                                                <h2 class="no-margins">@Html.FormatValue(@totalinvoicesyear, currencyFmt)  <strong>@Model.Moneda</strong></h2>
                                                <small>Total Facturado Anual</small>
                                                <div class="progress progress-mini">
                                                    <div style="width: 48%;" class="progress-bar"></div>
                                                </div>
                                            </li>
                                            <li>
                                                <h2 class="no-margins ">@Html.FormatValue(@totalinvoicelastmonth, currencyFmt)  <strong>@Model.Moneda</strong></h2>
                                                <small>Total Facturado Ultimo Mes</small>
                                                <div class="progress progress-mini">
                                                    <div style="width: 60%;" class="progress-bar"></div>
                                                </div>
                                            </li>
                                            <li>
                                                <h2 class="no-margins ">@Html.FormatValue(@totalinvoicemonth, currencyFmt)  <strong>@Model.Moneda</strong></h2>
                                                <small>Total Facturado Mes Actual</small>
                                                <div class="progress progress-mini">
                                                    <div style="width: 22%;" class="progress-bar"></div>
                                                </div>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3">
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <span class="label label-primary pull-right">Activos</span>
                                <h5>Clientes </h5>
                            </div>
                            <div class="ibox-content">
                                <h1 class="no-margins">@Model.ClientCount.Value</h1>
                                <small>Total Clientes</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <span class="label label-danger pull-right">Activos</span>
                                <h5>Usuarios </h5>
                            </div>
                            <div class="ibox-content">
                                <h1 class="no-margins">@Model.UserCount.Value</h1>
                                <small>Total Usuarios</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <script type="text/javascript">

        function mostrarDashboar() {
                    var id;
        if ($('#toggle-two').prop('checked')) {
            id = "CRC";
        }

        else {
            id = "USD";
        }
        //location.reload();
        abp.ui.setBusy();
        $.ajax({
            url: '@Url.Action("GetMoneda", "Home")',
            data: { id: id, DrawerId: $("#Drawer_DD").val(), BranchOfficeId: $("#Branch_DD").val()},
            success: function (data) {
                location.reload();
                //abp.ui.clearBusy();
            },
            error: function (err) {
                abp.ui.clearBusy();
        }
        });
    }
$(document).ready(function () {

    $("#Branch_DD").on("change", function () {

        var id = $(this).attr('data-cascade-combo');

        var url = $(this).attr('data-cascade-combo-source');

        var paramName = $(this).attr('data-cascade-combo-param-name');

        var data = {};
        data[paramName] = id;

        $.ajax({
            url: url,

            data: {
                id: $(this).val()
            },
            success: function (data) {
                $(id).html('');
                $.each(data.result, function (index, type) {
                    var descripcion = type.value == "" ? "Todas" : type.text;
                    var content = '<option value="' + type.value + '">' + descripcion+ '</option>';
                    $(id).append(content);

                });
                mostrarDashboar();
            }
        });
    });

    $("#Drawer_DD").on("change", function () {

        mostrarDashboar();
    });

    var fecha = new Date();
    var ano = fecha.getFullYear();

    var data2 = [
        [gd(ano, 1, 1), '@Model.PaymentList.Where(a => a.Month == "1").Sum(a => a.Quantity)'],
        [gd(ano, 2, 1), '@Model.PaymentList.Where(a => a.Month == "2").Sum(a => a.Quantity)'],
        [gd(ano, 3, 1), '@Model.PaymentList.Where(a => a.Month == "3").Sum(a => a.Quantity)'],
        [gd(ano, 4, 1), '@Model.PaymentList.Where(a => a.Month == "4").Sum(a => a.Quantity)'],
        [gd(ano, 5, 1), '@Model.PaymentList.Where(a => a.Month == "5").Sum(a => a.Quantity)'],
        [gd(ano, 6, 1), '@Model.PaymentList.Where(a => a.Month == "6").Sum(a => a.Quantity)'],
        [gd(ano, 7, 1), '@Model.PaymentList.Where(a => a.Month == "7").Sum(a => a.Quantity)'],
        [gd(ano, 8, 1), '@Model.PaymentList.Where(a => a.Month == "8").Sum(a => a.Quantity)'],
        [gd(ano, 9, 1), '@Model.PaymentList.Where(a => a.Month == "9").Sum(a => a.Quantity)'],
        [gd(ano, 10, 1),'@Model.PaymentList.Where(a => a.Month == "10").Sum(a => a.Quantity)'],
        [gd(ano, 11, 1), '@Model.PaymentList.Where(a => a.Month == "11").Sum(a => a.Quantity)'],
        [gd(ano, 12, 1), '@Model.PaymentList.Where(a => a.Month == "12").Sum(a => a.Quantity)']
    ];

    var data3 = [
        [gd(ano, 1, 1), '@Model.InvoicesList.Where(a => a.Month == "1").Sum(a => a.Quantity)'],
        [gd(ano, 2, 1), '@Model.InvoicesList.Where(a => a.Month == "2").Sum(a => a.Quantity)'],
        [gd(ano, 3, 1), '@Model.InvoicesList.Where(a => a.Month == "3").Sum(a => a.Quantity)'],
        [gd(ano, 4, 1), '@Model.InvoicesList.Where(a => a.Month == "4").Sum(a => a.Quantity)'],
        [gd(ano, 5, 1), '@Model.InvoicesList.Where(a => a.Month == "5").Sum(a => a.Quantity)'],
        [gd(ano, 6, 1), '@Model.InvoicesList.Where(a => a.Month == "6").Sum(a => a.Quantity)'],
        [gd(ano, 7, 1), '@Model.InvoicesList.Where(a => a.Month == "7").Sum(a => a.Quantity)'],
        [gd(ano, 8, 1), '@Model.InvoicesList.Where(a => a.Month == "8").Sum(a => a.Quantity)'],
        [gd(ano, 9, 1), '@Model.InvoicesList.Where(a => a.Month == "9").Sum(a => a.Quantity)'],
        [gd(ano, 10, 1), '@Model.InvoicesList.Where(a => a.Month == "10").Sum(a => a.Quantity)'],
        [gd(ano, 11, 1), '@Model.InvoicesList.Where(a => a.Month == "11").Sum(a => a.Quantity)'],
        [gd(ano, 12, 1), '@Model.InvoicesList.Where(a => a.Month == "12").Sum(a => a.Quantity)']
        ];

        var dataset = [
            {
                label: "Cantidad de Facturas",
                data: data3,
                color: "#1ab394",
                bars: {
                    show: true,
                    align: "center",
                    barWidth: 24 * 60 * 60 * 28000,
                }

            }, {
                label: "Cantidad de Pagos",
                data: data2,
                color: "#1C84C6",
                lines: {
                    lineWidth:1,
                    show: true,
                    fill: true,
                    fillColor: {
                        colors: [{
                            opacity: 0.2
                        }, {
                            opacity: 0.4
                        }]
                    }
                },
                splines: {
                    show: false,
                    tension: 0.6,
                    lineWidth: 1,
                    fill: 0.1
                },
            }
        ];

        var options = {
            xaxis: {
                mode: "time",
                timeformat: "%m/%y",
                tickSize: [1, "month"],
                tickLength: 0,
                axisLabel: ano,
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Arial',
                axisLabelPadding: 10,
                color: "#d5d5d5"
            },
            yaxes: [{
                position: "left",
            }, {
                position: "right",
            }
            ],
            legend: {
                noColumns: 1,
                labelBoxBorderColor: "#000000",
                position: "nw",
                margin:0
            },
            grid: {
                hoverable: false,
                borderWidth: 0
            }
        };

        function gd(year, month, day) {
            return new Date(year, month -1, day).getTime();
        }

        var previousPoint = null, previousLabel = null;
        var chart = $("#flot-dashboard-chart");
        if (chart.length > 0) {
            $.plot(chart, dataset, options);
        }
    });
            </script>
            <script>
                $(function () {
                    $('#toggle-two').bootstrapToggle({
                        on: 'CRC',
                        off: 'USD'
                    });


                    $('#toggle-two').change(function () {
                        mostrarDashboar();
                    })

                })
            </script>

        </div>
    }
    else
    {
        <div class="col-sm-6 col-sm-offset-5 col-sx-2 col-xs-offset-4 col-md-4 col-md-offset-2 col-lg-4 col-lg-offset-4" style="padding-top:50px">
            <img class="rounded-circle circle-border m-b-md logoGrande white-bg" style=" padding:10px" src="/images/ticopay-facturacion-electronica-logo-completo-verde-azul-vertical.png">
            <img class="rounded-circle circle-border m-b-md logopequeno white-bg" style="margin-top:50px; padding:10px" src="/images/ticopay-facturacion-electronica-logo-inciales.png">


        </div>
    }
}
else
{
    Html.RenderPartial("_firstStepsPartial", Model);
}




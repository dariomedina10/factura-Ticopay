@using TicoPay.Invoices
@model TicoPay.ReportStatusInvoices.Dto.ReportStatusInvoicesInputDto<TicoPay.ReportStatusInvoices.Dto.ReportStatusInvoicesDto>

<script>

    $(document).ready(function () {
        var table = $('#TableListEntity').DataTable({
            columnDefs: [
                { type: "sorted", targets: 2 },
                { orderable: false, targets: 4 },
                { orderable: false, targets: 5 },
                { orderable: false, targets: 6 },
                { orderable: false, targets: 9 },
                { orderable: false, targets: 10 }
            ],
            order: [[2, "desc"]],
            decimal: ",",
            thousands: ".",
            dom: 'Bfrtip',
            paging: true,
            searching: true,
            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",

            buttons: [{
                extend: 'copy',
                text: 'Copiar al portapapeles',
                footer: true
            },
                {
                    extend: 'excelHtml5',
                    exportOptions: {
                        columns: [0, 2, 3, 4, 5, 6, 7, 8]
                    },
                    customizeData: function (data) {

                        for (var i = 0; i < data.body.length; i++) {
                            data.body[i][1] = '\u200C' + data.body[i][1];
                        }

                        for (i = 0; i < data.body.length; i++) {
                            var fecha = data.body[i][2];
                            fecha = fecha.substring(10, 20);
                            data.body[i][2] = fecha;

                        };
                    }

                },
                {
                    extend: "pdfHtml5",
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
                    },
                    customize: function (doc) {
                        doc.styles.tableHeader.fontSize = 8;
                        doc.defaultStyle.fontSize = 8;
                        for (var i = 0; i < doc['content'][1]['table']['body'].length; i++) {
                            doc['content'][1]['table']['body'][i][8] = '';
                            doc['content'][1]['table']['body'][i][9] = '';
                        }
                        
                        
                        var rowCount = doc['content'][1]['table']['body'].length;

                        for (i = 1; i < rowCount; i++) {
                            var name = doc.content[1].table.body[i][0].text;
                            var delimiter = name.split(" ");
                            var namef = '';
                            $.each(delimiter, function (index, value) {
                                if (value.length > 9) {
                                    text = value.substring(0, 9) + '...';
                                }
                                else {
                                    text = value;
                                }
                                namef += text + ' ';
                            });
                            doc.content[1].table.body[i][0].text = namef;
                        };

                        for (i = 1; i < rowCount; i++) {
                            var fecha = doc.content[1].table.body[i][3].text;
                            fecha = fecha.substring(10, 20);
                            doc.content[1].table.body[i][3].text = fecha
                        };

                    },
                },
                'print'],
            language: {
                "sProcessing": "Procesando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "Ningún dato disponible en esta tabla",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                },
                buttons: {
                    copyTitle: 'Copiar al portapapeles',
                    copySuccess: {
                        _: 'Copiado %d filas al portapapeles',
                        1: 'Copiado una fila al portapapeles'
                    }
                }
            }
        });

        $('#TableListEntity tbody').on('click', '#details-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);
            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // Open this row
                row.child(row.data()[10]).show();
                tr.addClass('shown');
            }
        });

    });
</script>
<style>
    .ClientName {
        white-space: nowrap;
        min-width: 100px;
        max-width: 100px;
        overflow: hidden;
        text-overflow: ellipsis;
        text-align: center;
        margin: 0 auto;
    }

    .btn-primary {
        padding: 4px;
    }
</style>
@if (Model != null && Model.InvoicesList != null && Model.InvoicesList.Any())
{
    string currencyFmt = @System.Configuration.ConfigurationManager.AppSettings["CurrencyFormat"];
    
    <div class="wrapper wrapper-content white-bg text-center">
        <table id="TableListEntity" class="table table-responsive table-striped table-hover" style="font-size: small">
            <thead>
                <tr>
                    <th style="text-align: center">
                        Cliente
                    </th>
                    <th style="text-align: center">
                        Tipo Documento
                    </th>
                    <th style="text-align: center">
                        No. Documento
                    </th>
                    <th style="text-align: center">
                        Fecha
                    </th>
                    <th style="text-align: center">
                        Estado Hacienda
                    </th>
                    <th style="text-align: center">
                        Acuse Recibido
                    </th>
                    <th style="text-align: center">
                        Enviado Hacienda
                    </th>
                    <th style="text-align: center">
                        Moneda
                    </th>
                    <th style="text-align: center">
                        Total
                    </th>
                    <th title="Notas de Factura"><i id="details-control" class="glyphicon glyphicon-th-list"></i></th>
                    <th class="hidden"></th>
                    <th title="Descargas XML"><i id="download-control" class="glyphicon glyphicon-download-alt" style="font-size:16px;"></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.InvoicesList.OrderByDescending(a => a.ConsecutiveNumber))
                {
                    //var panel = "#fact" + item.Number;
                    //var id = "fact" + item.Number;
                    //data-toggle = "collapse" data-target = "@panel" role = "tab" data-parent = "@panel"
                <tr>
                    <td class="ClientName" style="text-align: center" title="@item.ClientName">
                        @item.ClientName
                    </td>
                    <td style="text-align: center">
                        @TicoPay.Application.Helpers.EnumHelper.GetDescription(item.TypeDocument)
                    </td>
                    <td style="text-align: center">
                        <div style="min-width:200px">
                            @item.ConsecutiveNumber
                        </div>
                    </td>
                    <td style="text-align: center">
                        <span style='display: none;'>@item.DueDate.ToString("yyyy/MM/dd")</span>@item.DueDate.ToString("dd/MM/yyyy")
                    </td>
                    <td style="text-align: center">
                        @if (item.StatusTribunet == StatusTaxAdministration.Recibido)
                        {
                            <span class="label label-success">@TicoPay.Application.Helpers.EnumHelper.GetDescription(item.StatusTribunet)</span>
                        }
                        @if (item.StatusTribunet == StatusTaxAdministration.Procesando)
                        {
                            <span class="label label-info">@TicoPay.Application.Helpers.EnumHelper.GetDescription(item.StatusTribunet)</span>
                        }
                        @if (item.StatusTribunet == StatusTaxAdministration.Aceptado)
                        {
                         <span class="label label-primary">@TicoPay.Application.Helpers.EnumHelper.GetDescription(item.StatusTribunet)</span>
                        }
                        @if (item.StatusTribunet == StatusTaxAdministration.Rechazado)
                        {
                            <span class="label label-warning">@TicoPay.Application.Helpers.EnumHelper.GetDescription(item.StatusTribunet)</span>
                        }
                        @if (item.StatusTribunet == StatusTaxAdministration.Error)
                        {
                            <span class="label label-danger">@TicoPay.Application.Helpers.EnumHelper.GetDescription(item.StatusTribunet)</span>
                        }
                        @if (item.StatusTribunet == StatusTaxAdministration.NoEnviada)
                        {
                            <span class="label">@TicoPay.Application.Helpers.EnumHelper.GetDescription(item.StatusTribunet)</span>
                        }
                    </td>
                    <td style="text-align: center">
                        @if (item.IsInvoiceReceptionConfirmed)
                        {
                            <span class="label label-primary">@StatusReception.Confirmada.ToString()</span>
                        }
                        else
                        {
                            <span class="label label-success">@StatusReception.Pendiente.ToString()</span>
                        }
                    </td>
                    <td>
                        @if (item.SendInvoice)
                        {
                            <span class="label label-primary">Enviada</span>
                        }
                        else
                        {
                            <span class="label">No Enviada</span>
                        }
                    </td>
                    <td style="text-align: center">
                        <div class="ClientName">@item.CodigoMoneda</div>
                    </td>
                    <td style="text-align: center">
                        @Html.FormatValue(@item.Total, currencyFmt)
                    </td>
                    <td>
                        @if (item.Notes.Count() > 0)
                        {
                            <a href="javascript:void(0);" title="Notas aplicadas"><i id="details-control" class="glyphicon glyphicon-th-list"></i></a>

                        }
                    </td>
                    <td class="hidden">@{Html.RenderPartial("_listDetailsPartial", item.Notes);}</td>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-toggle="dropdown">
                                ...
                                @*<span class="caret"></span>*@
                            </button>
                            <ul class="dropdown-menu" style="margin-left: -140px;">
                                @if (item.StatusTribunet == StatusTaxAdministration.Aceptado || item.StatusTribunet == StatusTaxAdministration.Rechazado)
                                {
                                    <li><a href="@Url.Action("DescargarRespuestaXml", "ReportStatusInvoices", new { id = @item.Id,type = @item.TypeDocument })" title="Descargar"><i id="download-control" class="glyphicon glyphicon-download-alt" style="font-size:16px;"></i>&nbsp;Respuesta XML</a></li>
                                    <li><a href="@Url.Action("VerRespuestaXML", "ReportStatusInvoices", new { id = item.Id,type = @item.TypeDocument  })" title="Ver"><i id="view-control" class="glyphicon glyphicon-eye-open" style="font-size:16px;"></i>&nbsp;Respuesta XML</a></li>
                                }
                                @if (item.HasElectronicBill)
                                {
                                    <li><a href="@Url.Action("DownloadInvoice", "ReportStatusInvoices", new { id = @item.Id,type = @item.TypeDocument  })" title="Descargar"><i id="download-control" class="glyphicon glyphicon-download-alt" style="font-size:16px;"></i>&nbsp;Factura Electrónica</a></li>
                                }
                                @*<li><a href="@Url.Action("DownloadRespuestaReceptor", "ReportStatusInvoices", new { id = @item.ConsecutiveNumber })" title="Descargar"><i id="download-control" class="glyphicon glyphicon-download-alt" style="font-size:16px;"></i>Respuesta Receptor</a></li>*@
                            </ul>
                        </div>

                    </td>
                </tr>
                    @*<tr id="@id" class="panel-collapse collapse">
                            <td colspan="7" class="wrapper wrapper-content white-bg text-center">
                                @{Html.RenderPartial("_listDetailsPartial", item.Notes);}
                            </td>
                        </tr>*@
                }
            </tbody>
        </table>
    </div>

}
else
{
    <div class="alert alert-warning alert-dismissible" role="alert" style="text-align: center;">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <strong>¡No se han encontrado ninguna Factura</strong>
    </div>

}
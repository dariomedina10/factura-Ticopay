@model TicoPay.Services.Dto.CreateServiceInput
@{
    ViewBag.Title = "Crear Servicio";
}


<script type="text/javascript">

    $("#priceText").on({
        "focus": function (event) {
            $(event.target).select();
        },
        "keyup": function (event) {
            $(event.target).val(function (index, value) {
                return value.replace(/\D/g, "")
                    .replace(/([0-9])([0-9]{2})$/, '$1.$2')
                    .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
            });
        }
    });

    $(document).ready(function () {
        popOverSave(TutorialSer, '<span class="glyphicon glyphicon-plus" aria-hidden="true"></span>&nbsp;Crear Servicio<span id="nav_NewServices"></span>', 'left', true);
        $('#cronSelector').cron({
            customValues: {
                "quincena": "0 0 1 1/15 * ? *",
                "trimestre": "0 0 1 1 1/3 ? *",
                "semestre": "0 0 1 1 1/6 ? *"
            },
            onChange: function () {
                $('#CronExprHidden').val($(this).cron("value"));
            }
        });
    });

    $(document).ready(function () {
        checkListFrecuency($('#Recurrent_CHK'));
        $("#measurement_DD").bind("change", function () {
            var selectedVal = $(this).val();
            console.log(selectedVal);
            if (selectedVal == "Otros") {
                $('#othersunit').show();
            } else {
                $('#othersunit').hide();
            }
        });

        $('#Recurrent_CHK').change(function () {
            checkListFrecuency(this);
        });
        $('input:radio[name=productoServicio]').change(function () {
            if (this.value == 'Servicio') {
                getRequest(createUrl);
            }
            else if (this.value == 'Producto') {
                getRequest(createProduct);
            }
        });
    });

    function checkListFrecuency(caller) {
        var isChecked = $(caller).is(':checked');
        if (!isChecked) {
            $('#isRecurrent').hide();
        } else {
            $('#isRecurrent').show();
        }
    };
    
</script>

@using (Ajax.BeginForm("Create", "Services", new AjaxOptions { HttpMethod = "POST" }, new { @class = "form-horizontal ", @id = "form" }))
{
    @Html.ValidationSummary(true)
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Crear Servicio</h4>
        <div class="radio" style="display:none">
            <label class="radio-inline">
                <input type="radio" name="productoServicio" value="Producto" id="product">Producto
            </label>
            <label class="radio-inline">
                <input type="radio" name="productoServicio" value="Servicio" id="services" checked="checked">Servicio
            </label>
        </div>
    </div>
    if (Model != null)
    {<div class="modal-body">
            <fieldset>
                <div class="col-lg-12"><a><span id="popOver_Name"></span></a></div>
                <div class="well col-lg-12 ">
                    @Html.HiddenFor(model => model.CronExpression, new { @id = "CronExprHidden" })
                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "nameText", @Type = "text", @required = "required", @maxlength = "160" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.Price, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Price, new { @class = "form-control", @id = "priceText", type = "text", @min = "0", @max = "999,999,999,999.99", @required = "required", @oninput = "if(this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);", @maxlength = "14", @pattern = @"^[+-]?[0-9]{1,3}(?:,?[0-9]{3})*(?:\.[0-9]{1,2})?$", @title = "ej. 458.25" })
                        @Html.ValidationMessageFor(model => model.Price)
                    </div>
                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.TaxId, new { @class = "control-label" })
                        @{
                            SelectList taxes = new SelectList(Model.Taxes.ToArray(), "Id", "Name");
                            <div>@Html.DropDownListFor(m => m.TaxId, taxes, new { @id = "Taxes_DD", @class = "form-control", @required = "required" })</div>
                        }
                    </div>
                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.UnitMeasurement, new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(model => model.UnitMeasurement, Model.UnitMeasurements, "Seleccione la Unidad de Medida", new { @id = "measurement_DD", @class = "form-control", @required = "required" })
                            @* @Html.EnumDropDownListFor(model => model.UnitMeasurement, "Seleccione la Unidad de Medida", new { @id = "measurement_DD", @class = "form-control", @required = "required" })*@
                        </div>
                    </div>

                <div class="input-group col-lg-10">
                    <div id='othersunit' style="display:none;">
                        @Html.LabelFor(model => model.UnitMeasurementOthers, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.UnitMeasurementOthers, new { @class = "form-control", @id = "OthersText", @Type = "text", @maxlength = "20" })
                    </div>
                </div>
                <br />
                <div class="input-group col-lg-10">
                    <span class="control-label">Seleccione si es recurrente </span> @Html.CheckBoxFor(model => model.IsRecurrent, new { @id = "Recurrent_CHK" })
                </div>
                <div id='isRecurrent'>
                    <div class="input-group col-lg-10" id='cronSelectorVisible'>
                        <label class="control-label">Frecuencia de Facturación del Servicio:</label>
                        <div id='cronSelector'></div>
                    </div>
                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.Quantity, new { @class = "control-label" })
                       @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", @id = "QuantityText", type = "text", @min = "1", @max = "999999999", @required = "required", @maxlength = "5", @pattern = @"^[+-]?[0-9]{1,3}(?:,?[0-9]{3})*(?:\.[0-9]{1,2})?$", @title = "ej. 1.25" })
                    </div>
                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.DiscountPercentage, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.DiscountPercentage, new { @class = "form-control", @id = "DiscountText", type = "text", @min = "0", @max = "999999999", @required = "required", @maxlength = "5", @pattern = @"^[+-]?[0-9]{1,3}(?:,?[0-9]{3})*(?:\.[0-9]{1,2})?$", @title = "ej. 10.25" })
                    </div>
                </div>
                
                <br />
                @if (Model.ErrorCode == 1)
                    {
                        <hr />
                        <div class="alert alert-success alert-dismissible" role="alert" style="text-align: center">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <strong>@Model.ErrorDescription</strong>
                        </div>
                    }
                    else if (Model.ErrorCode == -1)
                    {
                        <br />
                        <div class="alert alert-danger alert-dismissible" role="alert" style="text-align: center">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <strong>@Model.ErrorDescription</strong>
                        </div>
                    }
                </div>
                <div class="col-lg-12"><a><span id="popOver_Save"></span></a></div>
            </fieldset>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>

    }
}

@using Abp.Web.Mvc.Extensions
@model TicoPay.BranchOffices.Dto.UpdateBranchOfficesInput
@{
    ViewBag.Title = "Editar Sucursal";
}

<script src="@Url.Content("~/Scripts/util/formatter.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {

    });



 </script>
@using (Ajax.BeginForm("Edit", "BranchOffices", new AjaxOptions { HttpMethod = "POST" }, new { @class = "form-horizontal ", @id = "form" }))
{
    @Html.ValidationSummary(true)
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4>Editar @Model.Name</h4>
    </div>
    if (Model != null)
    {<div class="modal-body">
        <fieldset>
            <div class="well col-lg-12">

                <div class="input-group col-lg-10">
                    @Html.LabelFor(model => model.Code, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Code, new { @class = "form-control", @id = "priceText", type = "text", @required = "required", @maxlength = "3", @title = "", @readonly= "readonly"})
                    @*@Html.ValidationMessageFor(model => model.Code)*@
                </div>
               <div class="input-group col-lg-10">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "nameText", @Type = "text", @required = "required", @maxlength = "50" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
                <div class="input-group col-lg-10">
                    @Html.LabelFor(model => model.Location, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @id = "lcoationsText", type = "text", @min = "0", @required = "required", @maxlength = "200", @title = "" })
                    @Html.ValidationMessageFor(model => model.Location)
                </div>


                @if (Model.ErrorCode == 1)
    {
            <hr />
            <div class="alert alert-success alert-dismissible" role="alert" style="text-align: center">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>@Model.ErrorDescription</strong>
            </div>
}
else if (Model.ErrorCode == -1)
{
            <br />
            <div class="alert alert-danger alert-dismissible" role="alert" style="text-align: center">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>@Model.ErrorDescription</strong>
            </div>
}
            </div>
        </fieldset>

    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>

    }
}

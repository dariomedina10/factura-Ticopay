@using Abp.Web.Mvc.Extensions
@using System.Globalization
@using TicoPay.Inventory
@model TicoPay.Inventory.Dto.UpdateProductInput
@{
    ViewBag.Title = "Editar Producto";
}

<script src="@Url.Content("~/Scripts/util/formatter.js")" type="text/javascript"></script>
<script type="text/javascript">

    $("#retailpriceText").on({
        "focus": function (event) {
            $(event.target).select();
        },
        "keyup": function (event) {
            $(event.target).val(function (index, value) {
                return value.replace(/\D/g, "")
                    .replace(/([0-9])([0-9]{2})$/, '$1.$2')
                    .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
            });
        }
    });
   
   
</script>
@using (Ajax.BeginForm("Edit", "Products", new AjaxOptions { HttpMethod = "POST" }, new { @class = "form-horizontal ", @id = "form" }))
{
    @Html.ValidationSummary(true)
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4>Editar @Model.Name</h4>
    </div>
    if (Model != null)
    {<div class="modal-body">
            <fieldset>
                <div class="well col-lg-12">
                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "nameText", @Type = "text", @required = "required", @maxlength = "160" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.RetailPrice, new { @class = "control-label" })
                         @Html.TextBoxFor(model => model.RetailPrice, new { @class = "form-control", @id = "retailpriceText", @type = "text", @min = "0", @max = "9,999,999,999,999.99", @required = "required", @oninput = "if(this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);", @maxlength = "14", @pattern = @"^[+-]?[0-9]{1,3}(?:,?[0-9]{3})*(?:\.[0-9]{1,2})?$", @title = "ej. 458.25" })
                        @Html.ValidationMessageFor(model => model.RetailPrice)
                    </div>

                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.TaxId, new { @class = "control-label" })
                        @{
                            <div>@Html.DropDownListFor(model => model.TaxId, new SelectList(Model.Taxes, "Id", "Name"), " ", new { @id = "Taxes_DD", @class = "form-control", @required = "required" })</div>
                        }
                    </div>

                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.UnitMeasurement, new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(model => model.UnitMeasurement, Model.UnitMeasurements, "Seleccione Tipo de Producto", new { @id = "unidadMedida", @class = "form-control", @required = "required" })
                        </div>
                    </div>

                    <div class="input-group col-lg-10">
                        @Html.LabelFor(model => model.Estado, new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(model => model.Estado, Model.Estatus, new {  @class = "form-control", @required = "required" })
                        </div>
                    </div>
                    @if (Model.ErrorCode == 1)
                    {
                        <hr />
                        <div class="alert alert-success alert-dismissible" role="alert" style="text-align: center">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <strong>@Model.ErrorDescription</strong>
                        </div>
                    }
                    else if (Model.ErrorCode == -1)
                    {
                        <br />
                        <div class="alert alert-danger alert-dismissible" role="alert" style="text-align: center">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <strong>@Model.ErrorDescription</strong>
                        </div>
                    }
                </div>
            </fieldset>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>
    }
}
        
